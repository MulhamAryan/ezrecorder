#!/bin/bash -x

# EZCAST EZrecorder
#
# Copyright (C) 2014 Universit√© libre de Bruxelles
#
# Written by Michel Jansens <mjansens@ulb.ac.be>
# 	     Arnaud Wijns <awijns@ulb.ac.be>
#            Antoine Dewilde
# UI Design by Julien Di Pietrantonio
#
# This software is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 3 of the License, or (at your option) any later version.
#
# This software is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this software; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

#include localdefs
source $(dirname $0)/localdefs

CALLS=$1
MAXCALLS=3 	# sends a mail after 3 fails

#first clean up eventual movie remains
SDAT=`date +"%Y_%m_%d_%Hh%M"`
mkdir  $RECORDDIR/trash/$SDAT 
mv $RECORDDIR/${COMMON_MOVIE_NAME}*.mov  $RECORDDIR/trash/$SDAT/

osascript $EZCASTDIR/applescript/qtbstartmovierec.scpt&
wait

SDAT=`date +"%s"` 	#start date
WAITING_DELAY=4 	#if the file doesn't exist after 4s, we consider QTB has planted
EXISTS_SLIDE=0       	# 1 if $COMMON_MOVIE_NAME.mov exists on podcs

# loop while delay hasn't expired and slide file doesn't exist
while [ $(( `date +"%s"`- $SDAT )) -le $WAITING_DELAY -a \( $EXISTS_SLIDE -eq 0 \) ]
do 
	# if slide didn't exist yet, checks if it exists now
	[ $EXISTS_SLIDE -eq 0 ] && test -e $RECORDDIR/$COMMON_MOVIE_NAME.mov && EXISTS_SLIDE=1;
	# if slide doesn't exist yet, wait 
	if [ $EXISTS_SLIDE -eq 0 ]
	then
		sleep 0.5
	fi
done

#stop recording 
osascript $EZCASTDIR/applescript/qtbpausemovierec.scpt&
wait

# delete $COMMON_MOVIE_NAME.mov file 
rm $RECORDDIR/${COMMON_MOVIE_NAME}*.mov  
wait

# add entry in log file 
[ $CALLS -eq 1 ] && echo "********************************************" >> $EZCASTDIR/var/_dualqtbcheck_log
[ $CALLS -gt 1 ] && echo "--------------------------------------------" >> $EZCASTDIR/var/_dualqtbcheck_log
echo `date +"%d/%m/%y - %Hh%Mm%Ss"` : Attempt $CALLS >> $EZCASTDIR/var/_dualqtbcheck_log
echo "--------------------------------------------" >> $EZCASTDIR/var/_dualqtbcheck_log
if [ $EXISTS_SLIDE -eq 1 ]; then echo "SLIDE (podcs) : Success" >> $EZCASTDIR/var/_dualqtbcheck_log; else echo "SLIDE (podcs) : Failure" >> $EZCASTDIR/var/_dualqtbcheck_log; fi;

# the file has not been found
if [ $EXISTS_SLIDE -eq 0 ]
then 
	if [ $CALLS -lt $MAXCALLS ]
	then
		# Quit QTB
		osascript $EZCASTDIR/applescript/qtbquit.scpt&
		wait
		# Kill QTB if it hasn't been quit
		QTB_SLIDE_PID=`ps ax | grep -i "QuickTime Broadcaster" | grep -v grep | cut -c 1-6`
		# Test if QTB_SLIDE_PID is set
		if [ $QTB_SLIDE_PID -gt 0 ]; then kill -9 $QTB_SLIDE_PID; fi;

		$EZCASTDIR/bash/qtbnew $(( $CALLS + 1 ))
	else
		echo "FAILURE QTB"
		echo "QTB Launch Failure in $CLASSROOM" | mail -s "QTB Failure $CLASSROOM" $MAIL_TO
		echo -n "launch_failure" > $EZCASTDIR/var/status
	fi
fi