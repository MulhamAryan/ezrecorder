#!/bin/bash -x

# EZCAST EZrecorder
#
# Copyright (C) 2016 Universit√© libre de Bruxelles
#
# Written by Michel Jansens <mjansens@ulb.ac.be>
# 	     Arnaud Wijns <awijns@ulb.ac.be>
#            Antoine Dewilde
# UI Design by Julien Di Pietrantonio
#
# This software is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 3 of the License, or (at your option) any later version.
#
# This software is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this software; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

#include localdefs
source $(dirname $0)/localdefs

INPUT=$1
MOVIESNB=`ls -la $MOVIESDIR | grep $COMMON_MOVIE_NAME | wc -l  | sed -e 's/^[ \t]*//'`
CURRENT_INDEX=`ls -la $MOVIESDIR/${COMMON_MOVIE_NAME}_$(($MOVIESNB - 1 ))/high/${COMMON_MOVIE_NAME}*.ts | wc -l | sed -e 's/^[ \t]*//'`

case "$INPUT" in
    "UltraStudioMiniRecorder" )
        if [ -e $STREAMING_INFO ]
        then 
            mkdir -p $MOVIESDIR/${COMMON_MOVIE_NAME}_$MOVIESNB/high
            mkdir -p $MOVIESDIR/${COMMON_MOVIE_NAME}_$MOVIESNB/low
            # streaming is enabled. We prepare low and high resolution
            $FFMPEG_PATH -f decklink -i 'UltraStudio Mini Recorder@16' -vcodec libx264 -r 25 -crf 18 -profile:v main -acodec libfdk_aac $AC -maxrate 1000k -bufsize 1835k -pix_fmt yuv420p -force_key_frames "expr:gte(t,n_forced*3)" -flags -global_header -hls_time 3 -hls_list_size 0 -hls_wrap 0 -start_number $CURRENT_INDEX $MOVIESDIR/${COMMON_MOVIE_NAME}_$MOVIESNB/high/$COMMON_MOVIE_NAME.m3u8 -vcodec libx264 -r 10 -crf 18 -acodec libfdk_aac -profile:v baseline -maxrate 256k -bufsize 480k -pix_fmt yuv420p -b:v 128k -b:a 96k $AC -force_key_frames "expr:gte(t,n_forced*3)" -flags -global_header -hls_time 3 -hls_list_size 0 -hls_wrap 0 -start_number $CURRENT_INDEX $MOVIESDIR/${COMMON_MOVIE_NAME}_$MOVIESNB/low/$COMMON_MOVIE_NAME.m3u8 -vf fps=1 -y -updatefirst 1 $THUMBNAIL_PATH </dev/null >/dev/null 2> $EZCASTDIR/var/ffmpeg.log & echo $! > $FFMPEG_PID
        else 
            mkdir -p $MOVIESDIR/${COMMON_MOVIE_NAME}_$MOVIESNB/high
            # streaming is disabled. We prepare high resolution only
            $FFMPEG_PATH -f decklink -i 'UltraStudio Mini Recorder@16' -vcodec libx264 -r 25 -crf 18 -profile:v main -acodec libfdk_aac $AC -maxrate 1000k -bufsize 1835k -pix_fmt yuv420p -force_key_frames "expr:gte(t,n_forced*3)" -flags -global_header -hls_time 3 -hls_list_size 0 -hls_wrap 0 -start_number $CURRENT_INDEX $MOVIESDIR/${COMMON_MOVIE_NAME}_$MOVIESNB/high/$COMMON_MOVIE_NAME.m3u8 -vf fps=1 -y -updatefirst 1 $THUMBNAIL_PATH </dev/null >/dev/null 2> $EZCASTDIR/var/ffmpeg.log & echo $! > $FFMPEG_PID
        fi ;; 
    "IntensityShuttle" )
        if [ -e $STREAMING_INFO ]
        then 
            mkdir -p $MOVIESDIR/${COMMON_MOVIE_NAME}_$MOVIESNB/high
            mkdir -p $MOVIESDIR/${COMMON_MOVIE_NAME}_$MOVIESNB/low
            # streaming is enabled. We prepare low and high resolution
            $FFMPEG_PATH -f decklink -i 'Intensity Shuttle@3' -vcodec libx264 -r 25 -crf 18 -profile:v main -acodec libfdk_aac $AC -maxrate 1000k -bufsize 1835k -pix_fmt yuv420p -force_key_frames "expr:gte(t,n_forced*3)" -flags -global_header -hls_time 3 -hls_list_size 0 -hls_wrap 0 -start_number $CURRENT_INDEX $MOVIESDIR/${COMMON_MOVIE_NAME}_$MOVIESNB/high/$COMMON_MOVIE_NAME.m3u8 -vcodec libx264 -r 10 -crf 18 -acodec libfdk_aac -profile:v baseline -maxrate 256k -bufsize 480k -pix_fmt yuv420p -b:v 128k -b:a 96k $AC -force_key_frames "expr:gte(t,n_forced*3)" -flags -global_header -hls_time 3 -hls_list_size 0 -hls_wrap 0 -start_number $CURRENT_INDEX $MOVIESDIR/${COMMON_MOVIE_NAME}_$MOVIESNB/low/$COMMON_MOVIE_NAME.m3u8 -vf fps=1 -y -updatefirst 1 $THUMBNAIL_PATH </dev/null >/dev/null 2> $EZCASTDIR/var/ffmpeg.log & echo $! > $FFMPEG_PID
        else 
            mkdir -p $MOVIESDIR/${COMMON_MOVIE_NAME}_$MOVIESNB/high
            # streaming is disabled. We prepare high resolution only
            $FFMPEG_PATH -f decklink -i 'Intensity Shuttle@3' -vcodec libx264 -r 25 -crf 18 -profile:v main -acodec libfdk_aac $AC -maxrate 1000k -bufsize 1835k -pix_fmt yuv420p -force_key_frames "expr:gte(t,n_forced*3)" -flags -global_header -hls_time 3 -hls_list_size 0 -hls_wrap 0 -start_number $CURRENT_INDEX $MOVIESDIR/${COMMON_MOVIE_NAME}_$MOVIESNB/high/$COMMON_MOVIE_NAME.m3u8 -vf fps=1 -y -updatefirst 1 $THUMBNAIL_PATH </dev/null >/dev/null 2> $EZCASTDIR/var/ffmpeg.log & echo $! > $FFMPEG_PID
        fi ;;            
    "avfoundation" )
        if [ -e $STREAMING_INFO ]
        then 
            mkdir -p $MOVIESDIR/${COMMON_MOVIE_NAME}_$MOVIESNB/high
            mkdir -p $MOVIESDIR/${COMMON_MOVIE_NAME}_$MOVIESNB/low
            # streaming is enabled. We prepare low and high resolution
            $FFMPEG_PATH -f avfoundation  -vcodec rawvideo -pixel_format yuyv422 -r '25' -i '0:1' -vcodec libx264 -r 25 -crf 18 -profile:v main -acodec libfdk_aac $AC -maxrate 1000k -bufsize 1835k -pix_fmt yuv420p -force_key_frames "expr:gte(t,n_forced*3)" -flags -global_header -hls_time 3 -hls_list_size 0 -hls_wrap 0 -start_number $CURRENT_INDEX $MOVIESDIR/${COMMON_MOVIE_NAME}_$MOVIESNB/high/$COMMON_MOVIE_NAME.m3u8 -vcodec libx264 -r 10 -crf 18 -acodec libfdk_aac -profile:v baseline -maxrate 256k -bufsize 480k -pix_fmt yuv420p -b:v 128k -b:a 96k $AC -force_key_frames "expr:gte(t,n_forced*3)" -flags -global_header -hls_time 3 -hls_list_size 0 -hls_wrap 0 -start_number $CURRENT_INDEX $MOVIESDIR/${COMMON_MOVIE_NAME}_$MOVIESNB/low/$COMMON_MOVIE_NAME.m3u8 -vf fps=1 -y -updatefirst 1 $THUMBNAIL_PATH </dev/null >/dev/null 2> $EZCASTDIR/var/ffmpeg.log & echo $! > $FFMPEG_PID
        else 
            mkdir -p $MOVIESDIR/${COMMON_MOVIE_NAME}_$MOVIESNB/high
            # streaming is disabled. We prepare high resolution only
            $FFMPEG_PATH -f avfoundation  -vcodec rawvideo -pixel_format yuyv422 -r '25' -i '0:1' -vcodec libx264 -r 25 -crf 18 -profile:v main -acodec libfdk_aac $AC -maxrate 1000k -bufsize 1835k -pix_fmt yuv420p -force_key_frames "expr:gte(t,n_forced*3)" -flags -global_header -hls_time 3 -hls_list_size 0 -hls_wrap 0 -start_number $CURRENT_INDEX $MOVIESDIR/${COMMON_MOVIE_NAME}_$MOVIESNB/high/$COMMON_MOVIE_NAME.m3u8 -vf fps=1 -y -updatefirst 1 $THUMBNAIL_PATH </dev/null >/dev/null 2> $EZCASTDIR/var/ffmpeg.log & echo $! > $FFMPEG_PID
        fi ;; 
        # -f decklink = force BMD source
        # -i = input source
        # -vcodec = video codec (H264)
        # -r = framerate
        # -crf = encoding quality (higher = lower quality / best = 0)
        # -profile:v = video profile (baseline | main | high)
        # -maxrate = max bitrate
        # -bufsize = buffer size
        # -pix_fmt = pixel format
        # -force_key_frames = regular expression for setting keyframe every 3sec
        # -flags ?
        # -global_header ?
        # -hls_time = segment duration in seconds for HLS (related to keyframe)
        # -hls_list_size = limitation for HLS segments
        # -hls_wrap = number of segments before overwritting
        # -start_number = first segment starts at ...
esac

